pipeline{

    agent any
    environment {
        
        VERSION="${env.BUILD_ID}"
    }

    stages {
        
        stage('sonar quality status') {

            agent {

                docker {

                    image 'maven'
                    args '-u root'
                }
            }


            steps {

                script {

                    withSonarQubeEnv(credentialsId: 'sonar-token') {
                    
                        sh 'mvn clean package sonar:sonar'
                    }

                }
            }
        } 

        stage ('quality gate status')  {

            steps {

                script {

                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
                }

            }
            
        }  

        stage ('docker build and docker push to nexus repo')  {

            steps {

                script {

                    withCredentials([string(credentialsId: 'nexus_password', variable: 'nexus_creds')]) {

                        sh'''
                        docker build -t 54.237.148.198:8083/springapp:${VERSION} .

                        docker login -u admin -p $nexus_creds 54.237.148.198:8083

                        docker push 54.237.148.198:8083/springapp:${VERSION}

                        docker rmi 54.237.148.198:8083/springapp:${VERSION}

                        '''
                    }

                }

            }
            
        }          

    }

}
